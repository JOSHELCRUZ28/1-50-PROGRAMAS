  GNU nano 7.2                                           ProAct21.cpp
#include <iostream>
using namespace std;

void transponerMatriz(int** matriz, int** transpuesta, int filas, int columnas) {
    // Recorrer la matriz original y llenar la matriz transpuesta
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            transpuesta[j][i] = matriz[i][j];  // Intercambiar filas y columnas
        }
    }
}

void mostrarMatriz(int** matriz, int filas, int columnas) {
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cout << matriz[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    int filas, columnas;

    // Pedir al usuario las dimensiones de la matriz
    cout << "Introduce el número de filas de la matriz: ";
    cin >> filas;
    cout << "Introduce el número de columnas de la matriz: ";
    cin >> columnas;

    // Crear las matrices dinámicamente
    int** matriz = new int*[filas];
    int** transpuesta = new int*[columnas];

    for (int i = 0; i < filas; i++) {
        matriz[i] = new int[columnas];
    }

    for (int i = 0; i < columnas; i++) {
        transpuesta[i] = new int[filas];
    }

    // Pedir los elementos de la matriz original
    cout << "Introduce los elementos de la matriz original: " << endl;
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cin >> matriz[i][j];
        }
    }
    // Llamar a la función para transponer la matriz
    transponerMatriz(matriz, transpuesta, filas, columnas);

    // Mostrar la matriz transpuesta
    cout << "La matriz transpuesta es: " << endl;
    mostrarMatriz(transpuesta, columnas, filas);

    // Liberar la memoria de las matrices
    for (int i = 0; i < filas; i++) {
        delete[] matriz[i];
    }
    for (int i = 0; i < columnas; i++) {
        delete[] transpuesta[i];
    }

    delete[] matriz;
    delete[] transpuesta;

    return 0;
}
