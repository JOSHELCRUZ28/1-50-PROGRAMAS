  GNU nano 7.2                                           ProAct46.cpp                                                     #include <iostream>
#include <vector>
#include <string>
using namespace std;

// Función para encontrar el prefijo común más largo
string prefijoComunMasLargo(const vector<string>& cadenas) {
    if (cadenas.empty()) {
        return ""; // Si no hay cadenas, el prefijo común es vacío
    }

    // Tomamos la primera cadena como referencia para la comparación
    string prefijo = cadenas[0];

    // Comparamos el prefijo con cada cadena restante
    for (int i = 1; i < cadenas.size(); i++) {
        int j = 0;
        // Comparamos los caracteres del prefijo con la cadena actual
        while (j < prefijo.length() && j < cadenas[i].length() && prefijo[j] == cadenas[i][j]) {
            j++;
        }

        // Reducimos el prefijo al máximo común encontrado
        prefijo = prefijo.substr(0, j);

        // Si en algún momento el prefijo se convierte en una cadena vacía, no hay prefijo común
        if (prefijo == "") {
            break;
        }
    }

    return prefijo;
}

int main() {
    vector<string> cadenas;
    int n;

    cout << "Introduce el número de cadenas: ";
    cin >> n;

    // Solicitar al usuario que ingrese las cadenas
    cout << "Introduce las cadenas:" << endl;
    for (int i = 0; i < n; i++) {
        string str;
        cin >> str;
        cadenas.push_back(str);
    }

    // Encontrar el prefijo común más largo
    string resultado = prefijoComunMasLargo(cadenas);

    // Mostrar el resultado
    if (resultado.empty()) {
        cout << "No hay prefijo común." << endl;
    } else {
        cout << "El prefijo común más largo es: " << resultado << endl;
    }

    return 0;
}
