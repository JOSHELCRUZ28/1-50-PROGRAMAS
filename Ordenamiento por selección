  GNU nano 7.2                                          ProAct17.cpp                                                    #include <iostream>
using namespace std;

void ordenamientoSeleccion(int arr[], int n) {
    // Bucle para recorrer todo el arreglo
    for (int i = 0; i < n - 1; i++) {
        // Suponemos que el primer elemento no ordenado es el mínimo
        int indiceMinimo = i;

        // Encontrar el índice del mínimo elemento en la parte no ordenada
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[indiceMinimo]) {
                indiceMinimo = j;
            }
        }

        // Intercambiar el mínimo elemento encontrado con el primero no ordenado
        if (indiceMinimo != i) {
            int temp = arr[i];
            arr[i] = arr[indiceMinimo];
            arr[indiceMinimo] = temp;
        }
    }
}

void mostrarArreglo(int arr[], int n) {
    // Mostrar el arreglo
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main() {
    int n;

    // Pedir al usuario la cantidad de elementos en el arreglo
    cout << "Introduce el número de elementos en el arreglo: ";
    cin >> n;

    // Crear el arreglo
    int arr[n];

    // Pedir los elementos del arreglo
    cout << "Introduce los elementos del arreglo: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Mostrar el arreglo original
    cout << "Arreglo original: ";
    mostrarArreglo(arr, n);

    // Llamar a la función de ordenamiento por selección
    ordenamientoSeleccion(arr, n);

    // Mostrar el arreglo ordenado
    cout << "Arreglo ordenado: ";
    mostrarArreglo(arr, n);

    return 0;
}
