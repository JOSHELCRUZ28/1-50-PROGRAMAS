  GNU nano 7.2                                          ProAct19.cpp
#include <iostream>
using namespace std;

void sumaMatrices(int** matriz1, int** matriz2, int** resultado, int filas, int columnas) {
    // Recorrer las matrices y sumar los elementos correspondientes
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            resultado[i][j] = matriz1[i][j] + matriz2[i][j];
        }
    }
}

void mostrarMatriz(int** matriz, int filas, int columnas) {
    // Mostrar la matriz
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cout << matriz[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    int filas, columnas;

    // Pedir al usuario las dimensiones de las matrices
    cout << "Introduce el número de filas de las matrices: ";
    cin >> filas;
    cout << "Introduce el número de columnas de las matrices: ";
    cin >> columnas;

    // Crear las matrices dinámicamente
    int** matriz1 = new int*[filas];
    int** matriz2 = new int*[filas];
    int** resultado = new int*[filas];

    for (int i = 0; i < filas; i++) {
        matriz1[i] = new int[columnas];
        matriz2[i] = new int[columnas];
        resultado[i] = new int[columnas];
    }

    // Pedir al usuario los elementos de la primera matriz
    cout << "Introduce los elementos de la primera matriz: " << endl;
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cin >> matriz1[i][j];
        }
    }

    // Pedir al usuario los elementos de la segunda matriz
    cout << "Introduce los elementos de la segunda matriz: " << endl;
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cin >> matriz2[i][j];
        }
    }

    // Llamar a la función para sumar las matrices
    sumaMatrices(matriz1, matriz2, resultado, filas, columnas);

    // Mostrar el resultado de la suma
    cout << "Resultado de la suma de las matrices: " << endl;
    mostrarMatriz(resultado, filas, columnas);

    // Liberar la memoria de las matrices
    for (int i = 0; i < filas; i++) {
        delete[] matriz1[i];
        delete[] matriz2[i];
        delete[] resultado[i];
    }
    delete[] matriz1;
    delete[] matriz2;
    delete[] resultado;
    return 0;
}

