  GNU nano 7.2                                          ProAct15.cpp                                                    #include <iostream>
using namespace std;

int busquedaBinaria(int arr[], int n, int valor) {
    int inicio = 0;
    int fin = n - 1;

    // Mientras el rango de búsqueda sea válido
    while (inicio <= fin) {
        int medio = inicio + (fin - inicio) / 2;

        // Si encontramos el valor en el medio
        if (arr[medio] == valor) {
            return medio; // Devolver el índice
        }

        // Si el valor es menor que el del medio, buscar en la mitad izquierda
        if (arr[medio] > valor) {
            fin = medio - 1;
        }
        // Si el valor es mayor que el del medio, buscar en la mitad derecha
        else {
            inicio = medio + 1;
        }
    }
    // Si no se encuentra el valor, devolver -1
    return -1;
}

int main() {
    int n, valor;

    // Pedir al usuario la cantidad de elementos en el arreglo
    cout << "Introduce el número de elementos en el arreglo: ";
    cin >> n;

    // Crear el arreglo
    int arr[n];

    // Pedir los elementos del arreglo
    cout << "Introduce los elementos del arreglo (deben estar ordenados): ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // Pedir el valor a buscar
    cout << "Introduce el valor que deseas buscar: ";
    cin >> valor;

    // Llamar a la función de búsqueda binaria
    int indice = busquedaBinaria(arr, n, valor);
    // Verificar si se encontró el valor
    if (indice != -1) {
        cout << "El valor " << valor << " se encuentra en el índice " << indice << endl;
    } else {
        cout << "El valor " << valor << " no se encuentra en el arreglo." << endl;
    }

    return 0;
}
