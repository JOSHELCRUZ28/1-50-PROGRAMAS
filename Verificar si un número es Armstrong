  GNU nano 7.2                                           ProAct45.cpp
#include <iostream>
#include <cmath> // Para la función pow() que calcula potencias

using namespace std;

// Función para verificar si un número es Armstrong
bool esArmstrong(int num) {
    int originalNum = num;
    int suma = 0;
    int numDigitos = 0;

    // Contamos el número de dígitos
    while (num != 0) {
        num /= 10;
        numDigitos++;
    }

    num = originalNum; // Restauramos el valor original del número

    // Calculamos la suma de los dígitos elevados a la potencia del número de dígitos
    while (num != 0) {
        int digito = num % 10;  // Extraemos el último dígito
        suma += pow(digito, numDigitos);  // Elevamos el dígito a la potencia y lo sumamos
        num /= 10;  // Eliminamos el último dígito
    }
    // Comparamos la suma con el número original
    return suma == originalNum;
}

int main() {
    int numero;

    // Solicitar al usuario el número
    cout << "Introduce un número para verificar si es Armstrong: ";
    cin >> numero;

    // Verificar si el número es Armstrong y mostrar el resultado
    if (esArmstrong(numero)) {
        cout << numero << " es un número Armstrong." << endl;
    } else {
        cout << numero << " no es un número Armstrong." << endl;
    }

    return 0;
}
